name: CD 실행

on:
  workflow_run:
    workflows: ["CI 실행"]
    types:
      - completed

permissions:
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
  
    steps:
    # docker build & push to production
    - name: Docker build & push
      if: contains(github.ref, 'main')
      run: |
        sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/juksoon:latest -f ./Dockerfile .
        sudo docker push ${{ secrets.DOCKER_USERNAME }}/juksoon:latest
    
    # deploy to production
    - name: EC2 Connect & Deploy
      if: contains(github.ref, 'main')
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: true
        script: |
          # spring 컨테이너 중지 및 제거 (컨테이너가 있는 경우)
          CONTAINERS=$(docker ps -a -q --filter "name=juksoon") || true
          if [ -n "$CONTAINERS" ]; then
            sudo docker stop $CONTAINERS || true
            sudo docker rm -fv $CONTAINERS || true
          fi

          # docker-compose 파일 실행
          sudo docker-compose up -d

          # 불필요한 Docker 이미지 정리
          sudo docker image prune -f
    
